// pages/gradeTable/testDetail/testDetail.js
let utils = require("../../../utils/util.js");
let http = utils.http;
var that;
let resultArray = [];
Page({

  /**
   * 页面的初始数据
   */
  data: {
      list : [1,2,3],
      result : [],
      pointValue : 0,
      resultSign : true,  //true时为正数
      studentInfo : [],
      rowNum : [],
      current : 2,
      circular : false,
      assign : 1,
      assignIndex : 1,
      rowNumNow : 0,
      rowNo :1,
      pickNum : [],
      studentId : 0,
      maxLength : 0
  },
  // 获取滚动值
  getValue(e){
    resultArray[e.detail.index] = e.detail.value
    this.setData({
      result: resultArray
    })
  },
  // 获取滚动小数点后面的值
  getValuePoint(e){
    this.setData({
      pointValue: e.detail.value
    })
  },
  // 获取正负关系
  getSign(e){
    this.setData({
      resultSign: e.detail == 0
    })
  },
  // 提交结果
  pushResult(){
    let resultStr = (this.data.resultSign ? "" : "-") + this.data.result.join("") + (this.data.isPoint ? "." + this.data.pointValue : "");
    console.log(resultStr)
    if (parseFloat(resultStr) == 0){
      wx.showToast({
        title: "请选择结果",
        icon: 'none'
      })
      return false
    }
    resultBtn(that, this.data.options, parseFloat(resultStr))
    
  },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    that = this;
    // 改变标题
    wx.setNavigationBarTitle({
      title: options.testName
    })
    // 先初始化五个学生
    getFiveStu(that, options)
    this.setData({
      resultValue: JSON.parse(options.testValue).valueUnit ,
      options: options
    })
    // 设置picker的样式
    judge(that, this.data.studentObj.schoolTestId)
  },
  // 开启无缝轮播
  startCircular(e){
    if (e.currentTarget.dataset.index == 3){
      this.setData({
        circular: true
      })
    }
    this.setData({
      studentId: e.currentTarget.dataset.id
    })
  },
  // 改变轮播图
  nextCurrent(e){
    if (this.data.maxLength == 2){
      wx.showModal({
        title: '提示',
        content: '已经是最后一个了',
        success: function (res) {
          if (res.confirm) {
            wx.navigateBack({
              delta: 1
            })
          } else if (res.cancel) {
            that.setData({
              current: e.detail.current-1,
              maxLength: that.data.maxLength - 1
            })
          } 
        }

      }) 
      return false;
    }
    // 初始化picker数据
    // 设置picker的样式
    judge(that, this.data.studentObj.schoolTestId)
    this.setData({
      result: this.data.pickNum,
      pointValue : 0,
      resultSign : true,
      current: e.detail.current
    })
    // console.log(this.data.result)
    resultArray = this.data.result
    let formal = (e.detail.current == 0 && this.data.rowNumNow == 4)
    let irony = (e.detail.current == 4 && this.data.rowNumNow == 0)
    if (this.data.rowNumNow < e.detail.current || formal){
      // console.log("正")
      this.setData({
        rowNumNow: e.detail.current,
        rowNo: this.data.rowNum[e.detail.current].rowNo + 2,
        assignIndex: e.detail.current > 2 ? e.detail.current - 2 : e.detail.current + 3,
        isAnimation : true
      })
      if (this.data.rowNo - 2 > 2 || that.data.maxLength){
        assignStudentInfo(that)
      }     
    }
    if (this.data.rowNumNow > e.detail.current || irony) {
      // console.log("反")
      this.setData({
        rowNumNow: e.detail.current,
        rowNo: this.data.rowNum[e.detail.current].rowNo < 3 ? 0 : this.data.rowNum[e.detail.current].rowNo - 2,
        assignIndex: e.detail.current < 2 ? e.detail.current + 4 : e.detail.current - 1,
        isAnimation: true,
        maxLength: that.data.maxLength - 1 < 0 ? 0 : that.data.maxLength - 1
      })
      if (this.data.rowNo >= 1) {
        assignStudentInfo(that)
      }
    }
    setTimeout(function(){
      that.setData({
        isAnimation : false
      })
    },500)
    // console.log(this.data.studentInfo)
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})

// 查询单个学生的信息--用于初始化时
function getStudentInfo(that){
  let stuObj = {
    schoolTestId: that.data.studentObj.schoolTestId,
    schoolId: that.data.studentObj.schoolId,
    classId: that.data.studentObj.classId,
    activityId: that.data.studentObj.activityId,
    resultExist: that.data.studentObj.resultExist,
    rowNo: that.data.studentObj.rowNo,
    gender : 1
  }
  http("/v1/activity/student/query", stuObj, "GET", getStudentInfocb,that)
}
// 查询单个学生的信息回调--用于初始化时
function getStudentInfocb(that,res){
  let studentInfo = {
      studentName: res.studentName,
      birthday: res.birthday.split("-")[1] +"-"+ res.birthday.split("-")[2],
      gender: res.gender,
      resultExist: res.resultExist,
      rowNo: res.rowNo,
      studentId : res.studentId
    } 
  that.data.studentInfo.push(studentInfo)
  that.setData({
    studentInfo: that.data.studentInfo
  })
  // console.log(that.data.isAnimation)
}

// 查询单个学生的信息--用于修改指定下标的
function assignStudentInfo(that) {
  let stuObj = {
    schoolTestId: that.data.studentObj.schoolTestId,
    schoolId: that.data.studentObj.schoolId,
    classId: that.data.studentObj.classId,
    activityId: that.data.studentObj.activityId,
    resultExist: that.data.studentObj.resultExist,
    rowNo: that.data.rowNo,
    gender: 1
  }
  http("/v1/activity/student/query", stuObj, "GET", assignStudentInfocb, that, assignStudentfildcb)
}

// 查询单个学生的信息回调--用于修改指定下标的
function assignStudentInfocb(that, res) {
  let studentInfo = {
    studentName: res.studentName,
    birthday: res.birthday.split("-")[1] + "-" + res.birthday.split("-")[2],
    gender: res.gender,
    resultExist: res.resultExist,
    rowNo: res.rowNo,
    studentId: res.studentId
  }
  that.data.studentInfo[that.data.assignIndex - 1] = studentInfo
  that.data.rowNum[that.data.assignIndex-1].rowNo = res.rowNo
  that.setData({
    studentInfo: that.data.studentInfo,
    rowNum: that.data.rowNum
  })
  // console.log(that.data.studentInfo)
  if (res.rowNo == 1 && that.data.maxLength != 1){
    setTimeout(function(){
      that.setData({
        circular : false
      })
    },500)
  }
}
// 查询单个学生的信息失败回调--用于修改指定下标的
function assignStudentfildcb(that,res){
  that.setData({
    maxLength: that.data.maxLength + 1
  })
  return false;
}



// 初始化时候获取五个学生的信息
function getFiveStu(that,options){
  let rowArr = [];
  let index = 0;
  if (JSON.parse(options.testValue).rowNo < 3){
    for (let i = 1 ; i < 6;i++){
      index++
      that.setData({
        current: JSON.parse(options.testValue).rowNo == 1 ? 0 : 1,
        studentObj: {
          schoolId: wx.getStorageSync("userInfo").schoolId,
          classId: options.classId,
          activityId: options.activityId,
          schoolTestId: options.schoolTestId,
          resultExist: JSON.parse(options.testValue).resultExist,
          rowNo: i
        }
      })
      rowArr.push({ rowNo : that.data.studentObj.rowNo , index : index})
      that.setData({
        rowNum : rowArr
      })
      getStudentInfo(that)
    }
  }else{
    for (let i = JSON.parse(options.testValue).rowNo - 2; i < JSON.parse(options.testValue).rowNo + 3 ;i++){
      index++;
      that.setData({
        studentObj: {
          schoolId: wx.getStorageSync("userInfo").schoolId,
          classId: options.classId,
          activityId: options.activityId,
          schoolTestId: options.schoolTestId,
          resultExist: JSON.parse(options.testValue).resultExist,
          rowNo: i
        }
      })
      rowArr.push({ rowNo: that.data.studentObj.rowNo, index: index })
      that.setData({
        rowNum: rowArr
      })
      getStudentInfo(that)
    }
  }
}

// 获取指定序列号学学员信息
function getAssignStu(that,rowNo,options){
  that.setData({
    studentObj: {
      schoolId: wx.getStorageSync("userInfo").schoolId,
      classId: options.classId,
      activityId: options.activityId,
      schoolTestId: options.schoolTestId,
      resultExist: JSON.parse(options.testValue).resultExist,
      rowNo: rowNo
    }
  })
  getStudentInfo(that)
}
// 提交信息
function resultBtn(that, options ,value) {
  let result = {
    activityId: options.activityId,
    classId:options.classId,
    resultValue: value,
    schoolId : wx.getStorageSync("userInfo").schoolId,
    schoolTestId: options.schoolTestId,
    studentId: that.data.studentId
  }
  http("/v1/activity/test/save", result, "POST", resultBtncb, that)
}
// 提交信息回调
function resultBtncb(that,res){
  that.setData({
    current: that.data.current + 1
  })
}







// 根据测试id判断单位等的类型
function judge(that,id){
  switch (id) {
    case "1":
      resultArray = [0,0,0]
      that.setData({
        pickNum : [0,0,0],
        isPoint : true
      })
      break;
    case "12":
      resultArray = [0, 0, 0]
      that.setData({
        pickNum: [0, 0, 0],
        isPoint: true
      })
      break;
    case "7":
      resultArray = [0, 0, 0]
      that.setData({
        pickNum: [0, 0, 0],
        isPoint: true
      })
      break;
    case "2":
      resultArray = [0, 0, 0,0]
      that.setData({
        pickNum: [0, 0, 0, 0],
        isPoint: false
      })
      break;
    case "3":
      resultArray = [0, 0]
      that.setData({
        pickNum: [0,0],
        isPoint: true
      })
      break;
    case "4":
      resultArray = [0, 0]
      that.setData({
        pickNum: [0,0],
        isPoint: true,
        isSign : true
      })
      break;
    case "5":
      resultArray = [0, 0, 0]
      that.setData({
        pickNum: [0,0,0],
        isPoint: false,
        isSign: false
      })
      break;
    case '8':
      resultArray = [0, 0, 0]
      that.setData({
        pickNum: [0, 0, 0],
        isPoint: false,
        isSign: false
      })
      break;
    case "9":
      resultArray = [0, 0]
      that.setData({
        pickNum: [0,0],
        isPoint: false,
        isSign: false
      })
      break;
    case "6":
      resultArray = [0, 0]
      that.setData({
        pickNum: [0, 0],
        isPoint: false,
        isSign: false
      })
      break;
    default:
      
  }
}

